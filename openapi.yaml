openapi: 3.0.0
info:
  title: ESP32 Garden Controller API
  version: 1.2.0
  description: >
    REST API for ESP32-based garden controller with soil sensors and relay boards.

servers:
  - url: http://{device_ip}
    variables:
      device_ip:
        default: 192.168.1.50
        description: IP address of the ESP32 device

paths:
  /status:
    get:
      summary: Get device status
      responses:
        '200':
          description: Device status
          content:
            application/json:
              schema:
                type: object
                properties:
                  wifi: { type: string, example: MyWiFi }
                  ip: { type: string, example: 192.168.1.50 }
                  mode: { type: string, example: growing }
                  lightStart: { type: integer, example: 23 }
                  lightEnd: { type: integer, example: 17 }
                  sensorSettleTime: { type: integer, example: 300 }
                  wateringTimes:
                    type: array
                    items: { type: string, example: "08:00" }
                  soilReadings:
                    type: array
                    items: { type: integer }
                    example: [2400, 2500, 2300, 2450]

  /sensors:
    get:
      summary: Read soil sensors immediately
      responses:
        '200':
          description: Fresh soil readings
          content:
            application/json:
              schema:
                type: object
                properties:
                  soilReadings:
                    type: array
                    items: { type: integer }
                    example: [2450, 2100, 2800, 2600]

  /sensors/history:
    get:
      summary: Get soil sensor history
      description: >
        Returns all soil readings from the **current light cycle** only.
        Logs reset automatically at lightStart.
      responses:
        '200':
          description: Soil sensor log history
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                      example: "2025-09-26 03:15:00"
                    values:
                      type: array
                      items: { type: integer }
                      example: [2400, 2500, 2300, 2450]

  /config:
    post:
      summary: Update configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode: { type: string, example: growing }
                lightStart: { type: integer, example: 23 }
                lightEnd: { type: integer, example: 17 }
                sensorSettleTime: { type: integer, example: 400 }
                wateringTimes:
                  type: array
                  items: { type: string }
                  example: ["08:00", "20:00"]
      responses:
        '200':
          description: Config updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: ok }
        '400':
          description: Invalid JSON

  /reset:
    post:
      summary: Reset configuration
      responses:
        '200':
          description: Reset done
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: reset }
