openapi: 3.0.3
info:
  title: ESP32 Garden Controller API
  version: 1.1.0
  description: |
    REST API for ESP32-S3 garden controller.
    Provides system status, configuration, sensor readings,
    and archived soil logs stored on SD card.

servers:
  - url: http://{host}:{port}
    variables:
      host:
        default: esp32.local
      port:
        default: "80"

paths:
  /status:
    get:
      summary: Get system status
      responses:
        "200":
          description: Current system status
          content:
            application/json:
              schema:
                type: object
                properties:
                  wifi:
                    type: string
                  ip:
                    type: string
                  mode:
                    type: string
                  lightStart:
                    type: integer
                  lightEnd:
                    type: integer
                  sensorSettleTime:
                    type: integer
                  wateringTimes:
                    type: array
                    items:
                      type: string
                  soilReadings:
                    type: array
                    items:
                      type: integer

  /config:
    post:
      summary: Update configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  type: string
                lightStart:
                  type: integer
                lightEnd:
                  type: integer
                sensorSettleTime:
                  type: integer
                wateringTimes:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Configuration updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /reset:
    post:
      summary: Reset configuration to defaults
      responses:
        "200":
          description: Config reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /sensors:
    get:
      summary: Read soil sensors immediately
      responses:
        "200":
          description: Current soil readings
          content:
            application/json:
              schema:
                type: object
                properties:
                  soilReadings:
                    type: array
                    items:
                      type: integer

  /sensors/history:
    get:
      summary: Get soil sensor history for current light cycle
      responses:
        "200":
          description: History of soil readings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    values:
                      type: array
                      items:
                        type: integer

  /sensors/archive:
    get:
      summary: List or fetch archived soil log files from SD card
      parameters:
        - name: file
          in: query
          required: false
          schema:
            type: string
          description: Exact filename to fetch (e.g. `/soil_2025-09-26.json`)
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Date to fetch (e.g. `2025-09-26`)
      responses:
        "200":
          description: |
            - If no query: JSON array of available files (newest first)  
            - If file/date given: JSON log file contents
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      type: string
                  - type: object
                    properties:
                      date:
                        type: string
                        format: date
                      readings:
                        type: array
                        items:
                          type: object
                          properties:
                            timestamp:
                              type: string
                              format: date-time
                            values:
                              type: array
                              items:
                                type: integer
        "404":
          description: File not found
